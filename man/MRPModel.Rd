% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model.R
\name{MRPModel}
\alias{MRPModel}
\title{MRPModel objects}
\arguments{
\item{model_spec}{List containing model effects specification including intercept, fixed effects, varying effects, and interactions}

\item{mrp_data}{List containing the MRP data structure with input sample data and new post-stratification data}

\item{metadata}{List containing metadata about the analysis including family, time variables, and special cases}

\item{link_data}{List containing information about data linking including geography and ACS year}

\item{plot_data}{List containing data prepared for visualization including dates and geojson objects}
}
\value{
A new \code{MRPModel} object initialized with the provided effects, MRP data, metadata, link data, and plot data.
}
\description{
A \code{MRPModel} object is an \link[R6:R6Class]{R6} object created by the
\code{\link[=MRPWorkflow-method-create_model]{$create_model()}} method of a
\code{\link{MRPWorkflow}} object. Each \code{MRPModel} object represents a
multilevel regression model with methods for sampling, diagnostics,
and post-stratification.

Creates a new instance of the MRPModel class with specified effects, data, and metadata for Bayesian model fitting.
}
\section{Methods}{
 \code{MRPModel} objects have the following associated
methods, many of which have their own (linked) documentation pages:
\subsection{Data access}{\tabular{ll}{
   \strong{Method} \tab \strong{Description} \cr
   \code{\link[=MRPModel-method-model_spec]{$model_spec()}} \tab Return model specification. \cr
   \code{\link[=MRPModel-method-formula]{$formula()}} \tab Return model formula. \cr
   \code{\link[=MRPModel-method-metadata]{$metadata()}} \tab Return model metadata. \cr
   \code{\link[=MRPModel-method-stan_code]{$stan_code()}} \tab Return model Stan code. \cr
}

}

\subsection{Model fitting}{\tabular{ll}{
   \strong{Method} \tab \strong{Description} \cr
   \code{\link[=MRPModel-method-fit]{$fit()}} \tab Fit multilevel regression model using CmdStanR. \cr
   \code{\link[=MRPModel-method-check_fit_exists]{$check_fit_exists()}} \tab Check if model has been fitted. \cr
   \code{\link[=MRPModel-method-check_estimate_exists]{$check_estimate_exists()}} \tab Check if post-stratification has been performed. \cr
}

}

\subsection{Posterior summary & diagnostics}{\tabular{ll}{
   \strong{Method} \tab \strong{Description} \cr
   \code{\link[=MRPModel-method-summary]{$summary()}} \tab Return posterior summary table. \cr
   \code{\link[=MRPModel-method-diagnostics]{$diagnostics()}} \tab Return sampling diagnostics. \cr
}

}

\subsection{Post-processing}{\tabular{ll}{
   \strong{Method} \tab \strong{Description} \cr
   \code{\link[=MRPModel-method-ppc]{$ppc()}} \tab Run posterior predictive check. \cr
   \code{\link[=MRPModel-method-loo]{$loo()}} \tab Create input for leave-one-out cross-validation. \cr
   \code{\link[=MRPModel-method-poststratify]{$poststratify()}} \tab Run post-stratification to generate population estimates. \cr
}

}

\subsection{Saving model object}{\tabular{ll}{
   \strong{Method} \tab \strong{Description} \cr
   \code{\link[=MRPModel-method-save]{$save()}} \tab Save model object to file. \cr
}

}
}

\examples{
  library(shinymrp)

  # Initialize the MRP workflow
  workflow <- mrp_workflow()

  # Load example data
  sample_data <- example_sample_data()

  ### DATA PREPARATION

  # Preprocess sample data
  workflow$preprocess(
    sample_data,
    is_timevar = TRUE,
    is_aggregated = TRUE,
    special_case = NULL,
    family = "binomial"
  )

  # Link data to the ACS
  # and obtain poststratification data
  workflow$link_acs(
    link_geo = "zip",
    acs_year = 2021
  )

  ### DESCRIPTIVE STATISTICS

  # Visualize demographic distribution of data
  workflow$demo_bars(demo = "sex")

  # Visualize geographic distribution of data
  workflow$sample_size_map()

  # Visualize outcome measure
  workflow$outcome_plot()

  ### MODEL BUILDING

  # Create new model objects
  model <- workflow$create_model(
    model_spec = list(
      Intercept = list(
        Intercept = "normal(0, 5)"
      ),
      fixed = list(
        sex = "normal(0, 2)",
        race = "normal(0, 2)"
      ),
      varying = list(
        age = "normal(0, 2)",
        time = "normal(0, 2)"
      )
    )
  )

  # Run MCMC
  model$fit(n_iter = 1000, n_chains = 2, seed = 123)

  # Estimates summary and diagnostics
  model$summary()

  # Sampling diagnostics
  model$diagnostics()

  # Posterior predictive check
  workflow$pp_check(model)

  ### VISUALIZE RESULTS

  # Plots of overall estimates, estimates for demographic groups and geographic areas
  workflow$estimate_plot(model, group = "sex")

  # Choropleth map of estimates for geographic areas
  workflow$estimate_map(model, geo = "county")

}
